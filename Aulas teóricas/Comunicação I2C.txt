   -= Comunicação I2C (talvez anotar também sobre SPI e deixar como comunicação serial) =-

  Porque é um protocolo? 
  Um protocolo tem forte relação com trasmissão e recebimento de dados.
  É basicamente uma padronização de hardware e software para o mercado. No início o objetivo era diminuir e padronizar a quantidade de pinos para a comunicação serial.

  Protocolo de comunicação serial 

  Resistor pull-up
  Tem a função de manter o sinal de dados ou clock sempre em nível lógico alto quando não estiver ativado pelo dispositivo mestre. Isso é essencial pois o protocolo I2C utiliza niveis lógicos "alto" e "baixo" para a comuniação. Valores entre 1kΩ e 10kΩ são os recomendados, mas o valor ideal só depende da aplicação.

  SDA (serial data): 
  SCL (serial clock): 
  Trabalho deles junto: 

  Pelo hardware, podem existir de 1 à vários CIs de memória, 

  -- Frame --
  Byte de controle / Control Byte (padrão do I2C)
 - Slave address: 
 - Select Device Bus: Definido pelo desenvolvedor, é um endereço para a memória interna.
 - Read/Write (RW): Configura se o  vai escrever dados ou ler dados.
 - Acknologed:
 
  Address Byte
 - Address High Byte: 
 - Address Low Byte: 
 - Data: 
 - Stop: comunicação pronta e finalizada.

 Função restart:

  100000 frequência de clock


